<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                       http://www.springframework.org/schema/beans/spring-beans.xsd
	                       http://www.springframework.org/schema/context
	                        http://www.springframework.org/schema/context/spring-context-3.2.xsd">
	<!-- 配置整合mybatis -->
	<context:property-placeholder location="classpath*:config/jdbc.properties" />
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialPoolSize" value="${jdbc.initialPoolSize}" />
		<!-- 连接池的最大值 -->
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}" />
		<!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="minPoolSize" value="${jdbc.minPoolSize}" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}" />
		<!-- 关闭连接后不自动commit -->
		<property name="autoCommitOnClose" value="false"></property>
		<!-- 获取连接超时时间 -->
		<property name="checkoutTimeout" value="1000"></property>
		<!-- 获取连接失败重试的次数 -->
		<property name="acquireRetryAttempts" value="2"></property>
	</bean>
	<!-- 配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
		<!-- 扫描实体类，使用别名 -->
		<property name="typeAliasesPackage" value="com.glinin.seckill.entity"></property>
		<!-- mapper和resultmap配置路径 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
	</bean>
	<!-- 配置扫描DAO接口包，动态实现DAO接口，注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.glinin.seckill.dao" />
	</bean>
</beans>